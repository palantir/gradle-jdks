apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.external-publish-gradle-plugin'
apply plugin: 'org.unbroken-dome.test-sets'

testSets {
    integTest
}

tasks.build.dependsOn tasks.integTest

dependencies {
    api project(':gradle-jdks-distributions')
    api project(':gradle-jdks-json')

    implementation 'com.palantir.baseline:gradle-baseline-java'
    implementation 'com.palantir.gradle.utils:lazily-configured-mapping'
    implementation 'com.google.guava:guava'

    compileOnly 'org.immutables:value::annotations'
    annotationProcessor 'org.immutables:value'

    testImplementation 'com.netflix.nebula:nebula-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
}

gradlePlugin {
    plugins {
        jdks {
            id = 'com.palantir.jdks'
            displayName = 'Palantir JDK Auto-provisioning Plugin'
            description = 'Auto-provisions specific versions of JDKs'
            implementationClass = 'com.palantir.gradle.jdks.JdksPlugin'
        }
        palantirCa {
            id = 'com.palantir.jdks.palantir-ca'
            displayName = 'Palantir CA for gradle-jdks'
            description = 'Includes the Palantir CA from the system truststore'
            implementationClass = 'com.palantir.gradle.jdks.PalantirCaPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/palantir/gradle-jdks'
    vcsUrl = 'https://github.com/palantir/gradle-jdks'
    description = 'Download specific JDKs versions automatically'
    tags = ['java', 'jdks']
}

tasks.withType(JavaCompile).configureEach {
    it.options.errorprone.disable 'JavaxInjectOnAbstractMethod'
    it.options.errorprone.disable 'StrictUnusedVariable'
}
